/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.citec.dal;

import de.citec.dal.hal.unit.AbstractUnitController;
import de.citec.dal.hal.unit.AmbientLightController;
import de.citec.dal.visual.unit.AmbientLightView;
import de.citec.dal.visual.util.RSBRemoteView;
import de.citec.jul.exception.CouldNotPerformException;
import de.citec.jul.pattern.Observable;
import de.citec.jul.pattern.Observer;
import java.util.ArrayList;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import rsb.Scope;
import de.citec.jul.exception.InstantiationException;

/**
 *
 * @author mpohling
 */
public class DeviceViewerFrame extends javax.swing.JFrame implements Observer<Scope> {

    private final Object REMOTE_VIEW_LOCK = new Object();

    protected static final Logger logger = LoggerFactory.getLogger(DeviceViewerFrame.class);

    private RSBRemoteView remoteView;

    /**
     * Creates new form DeviceViewerFrame
     *
     * @throws de.citec.jul.exception.InstantiationException
     */
    public DeviceViewerFrame() throws InstantiationException {
        try {
            initComponents();
            initTypeComboBox();
            setRemoteView(new AmbientLightView());
            unitPanel.addObserver(this);
        } catch (CouldNotPerformException ex) {
            throw new de.citec.jul.exception.InstantiationException(this, ex);
        }
    }

    public final void setRemoteView(RSBRemoteView remoteView) throws CouldNotPerformException {
        synchronized (REMOTE_VIEW_LOCK) {
            logger.info("Set remote view: " + remoteView.getClass().getSimpleName());

            if (this.remoteView != null) {
                this.remoteView.shutdown();
                remoteContextPanel.remove(remoteView);
            }

            // Init RemoteView
            this.remoteView = remoteView;
            try {
                remoteView.setScope(unitPanel.getScope());
            } catch (CouldNotPerformException ex) {
                throw new CouldNotPerformException("Could not setup remote view!", ex);
            }

            // Setup context panel
            remoteContextPanel.add(remoteView);
        }
        remoteContextPanel.revalidate();

        this.pack();
    }

    class UnitClassContainer<T> {

        private final Class<T> clazz;
        private final String label;

        public UnitClassContainer(Class<T> clazz, String label) {
            this.clazz = clazz;
            this.label = label;
        }

        public Class<T> getClazz() {
            return clazz;
        }

        public String getLabel() {
            return label;
        }

        @Override
        public String toString() {
            return label;
        }
    }

    private void initTypeComboBox() {
        ArrayList<Class<? extends AbstractUnitController>> unitClasses = new ArrayList();
//		for (Class<? extends AbstractUnitController> unitClass : registry.getRegisteredUnitClasses()) {
//			unitClasses.add(unitClass);
//		}
        unitClasses.add(AmbientLightController.class);
        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel(unitClasses.toArray()));
        typeComboBox.setSelectedItem(0);
        unitPanel.fillComboBox((Class<? extends AbstractUnitController>) typeComboBox.getSelectedItem());
    }

    @Override
    public synchronized void update(final Observable<Scope> source, final Scope scope) throws CouldNotPerformException {
        if (remoteView == null) {
            return;
        }

        remoteView.setEnabled(false);
        remoteView.setScope(scope);
        remoteView.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        typeComboBox = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        remoteContextPanel = new javax.swing.JPanel();
        unitPanel = new de.citec.dal.visual.unit.UnitPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Type"));

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AmbientLight" }));
        typeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(typeComboBox, 0, 382, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Remote"));

        remoteContextPanel.setBackground(new java.awt.Color(85, 85, 85));
        remoteContextPanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(remoteContextPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(remoteContextPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(unitPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(unitPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboBoxActionPerformed
        unitPanel.fillComboBox((Class<? extends AbstractUnitController>) typeComboBox.getSelectedItem());
    }//GEN-LAST:event_typeComboBoxActionPerformed

    /**
     * l
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | java.lang.InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.warn("Could not setup look and feel!", ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new DeviceViewerFrame().setVisible(true);
                } catch (InstantiationException ex) {
                    logger.error("Could not setup gui!", ex);
                    System.exit(1);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel remoteContextPanel;
    private javax.swing.JComboBox typeComboBox;
    private de.citec.dal.visual.unit.UnitPanel unitPanel;
    // End of variables declaration//GEN-END:variables
}
