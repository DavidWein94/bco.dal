/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.l
 */
package de.citec.dal.view;

import java.util.logging.Level;
import java.util.logging.Logger;
import rsb.Event;
import rsb.Factory;
import rsb.Handler;
import rsb.InitializeException;
import rsb.Listener;
import rsb.RSBException;
import rsb.Scope;

/**
 *
 * @author nuc
 */
public abstract class AbstractSensorPanel extends javax.swing.JPanel implements Handler {

    private Listener listener;

    public AbstractSensorPanel() {
        initComponents();

        addConverter();
    }
    public void activateListener(Scope scope) {
        try {
            listener = Factory.getInstance().createListener(scope);
            listener.activate();
            listener.addHandler(this, true);
        } catch (InitializeException ex) {
            System.out.println("Could not create Listener on scope [" + scope.toString() + "]!");
            Logger.getLogger(AbstractSensorPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RSBException ex) {
            System.out.println("Could not activate Listener!");
            Logger.getLogger(AbstractSensorPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            System.out.println("Could not add a Handler!");
            Logger.getLogger(AbstractSensorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void deacivateListener() {
        try {
            listener.deactivate();
        } catch (InterruptedException | RSBException ex) {
            System.out.println("Unable to deactivate Listener!");
            Logger.getLogger(AbstractSensorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    protected abstract void addConverter();

    @Override
    public abstract void internalNotify(Event event);


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        stateLabel = new javax.swing.JLabel();

        stateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stateLabel.setText("Unknown");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(stateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(stateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel stateLabel;
    // End of variables declaration//GEN-END:variables

}
