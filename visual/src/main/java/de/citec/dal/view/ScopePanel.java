/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.citec.dal.view;

import de.citec.dal.util.MultiException;
import de.citec.dal.util.Observable;
import de.citec.dal.util.Observer;
import java.awt.Color;
import org.slf4j.LoggerFactory;
import rsb.Scope;

/**
 *
 * @author nuc
 */
public class ScopePanel extends javax.swing.JPanel {

    protected final org.slf4j.Logger logger = LoggerFactory.getLogger(getClass());
    
    private Observable<Scope> observable;

    /**
     * Creates new form ScopePanel
     */
    public ScopePanel() {
        initComponents();
        observable = new Observable<>();
    }

    public void addObserver(Observer<Scope> observer) {
        observable.addObserver(observer);
    }

    public void removeObserver(Observer<Scope> observer) {
        observable.removeObserver(observer);
    }
    
    public Scope getScope() {
        return new Scope(scopeTextField.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scopeLabel = new javax.swing.JLabel();
        scopeTextField = new javax.swing.JTextField();

        scopeLabel.setText("Scope:");

        scopeTextField.setText("/home/control/ambientlight/TestUnit_0");
        scopeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scopeTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scopeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scopeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scopeLabel)
                    .addComponent(scopeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void scopeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scopeTextFieldActionPerformed
        try {
            observable.notifyObservers(new Scope(scopeTextField.getText()));
            scopeTextField.setForeground(Color.BLACK);
        } catch (MultiException ex) {
            scopeTextField.setForeground(Color.RED);
            logger.error("Could not update scope!", ex);
        }
    }//GEN-LAST:event_scopeTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel scopeLabel;
    private javax.swing.JTextField scopeTextField;
    // End of variables declaration//GEN-END:variables
}
